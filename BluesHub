-- BluesHub Script for Blox Fruits
-- Features: Auto Quest, All Boss Killing, Auto Fruit Collection, ESP Fruits, Auto Teleport to Fruits, RedzHub-style UI, Auto Tap for Weapons
-- DISCLAIMER: Use at your own risk. This script might violate Roblox's Terms of Service.

-- Services
local player = game.Players.LocalPlayer
local replicatedStorage = game:GetService("ReplicatedStorage")
local workspace = game:GetService("Workspace")
local userInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Toggle States
local toggles = {
    autoFarm = false,
    autoFruitCollect = false,
    espFruits = false,
    autoTeleportFruits = false,
    autoTap = false
}

-- UI Components
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "BluesHub"

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 400, 0, 350)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 50) -- Blue-black theme
mainFrame.BorderSizePixel = 0
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)

local titleBar = Instance.new("Frame", mainFrame)
titleBar.Size = UDim2.new(1, 0, 0, 50)
titleBar.BackgroundColor3 = Color3.fromRGB(5, 5, 30) -- Dark blue-black
titleBar.BorderSizePixel = 0

local titleLabel = Instance.new("TextLabel", titleBar)
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.Text = "BluesHub"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
titleLabel.TextScaled = true
titleLabel.Font = Enum.Font.Arcade -- Minecraft-like font
titleLabel.BackgroundTransparency = 1

local closeButton = Instance.new("TextButton", titleBar)
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -45, 0.5, -20)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.Arcade -- Minecraft-like font
closeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
closeButton.BorderSizePixel = 0
closeButton.AnchorPoint = Vector2.new(0.5, 0.5)
closeButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

local minimizeButton = Instance.new("TextButton", titleBar)
minimizeButton.Size = UDim2.new(0, 40, 0, 40)
minimizeButton.Position = UDim2.new(1, -90, 0.5, -20)
minimizeButton.Text = "_"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextScaled = true
minimizeButton.Font = Enum.Font.Arcade -- Minecraft-like font
minimizeButton.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
minimizeButton.BorderSizePixel = 0
minimizeButton.AnchorPoint = Vector2.new(0.5, 0.5)

local buttonContainer = Instance.new("Frame", mainFrame)
buttonContainer.Size = UDim2.new(1, -20, 1, -70)
buttonContainer.Position = UDim2.new(0, 10, 0, 60)
buttonContainer.BackgroundTransparency = 1

-- Rounded Corners
local function ApplyRoundedCorners(frame)
    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius = UDim.new(0, 20) -- Adjust corner radius
end

ApplyRoundedCorners(mainFrame)
ApplyRoundedCorners(titleBar)
ApplyRoundedCorners(closeButton)
ApplyRoundedCorners(minimizeButton)

-- Make UI Draggable with exception handling
local function MakeDraggable(frame, exception)
    local dragging = false
    local dragInput, mousePos, framePos

    frame.InputBegan:Connect(function(input)
        -- Check if the input is not on the exception
        if input.UserInputType == Enum.UserInputType.MouseButton1 and (not exception or not exception:IsDescendantOf(input.Target)) then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Apply draggable behavior to the mainFrame with minimizeButton as exception
MakeDraggable(mainFrame, minimizeButton)

-- Minimized State
local isMinimized = false

local minimizedBlock = Instance.new("Frame", screenGui)
minimizedBlock.Size = UDim2.new(0, 100, 0, 50)
minimizedBlock.Position = UDim2.new(0.5, -50, 0.5, -25)
minimizedBlock.BackgroundColor3 = Color3.fromRGB(10, 10, 50) -- Blue-black for minimized block
minimizedBlock.Visible = false
ApplyRoundedCorners(minimizedBlock)

local bhLabel = Instance.new("TextLabel", minimizedBlock)
bhLabel.Size = UDim2.new(1, 0, 1, 0)
bhLabel.Text = "BH"
bhLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
bhLabel.TextScaled = true
bhLabel.Font = Enum.Font.Arcade -- Minecraft-like font
bhLabel.BackgroundTransparency = 1

minimizeButton.MouseButton1Click:Connect(function()
    if isMinimized then
        mainFrame.Visible = true
        minimizedBlock.Visible = false
        isMinimized = false
    else
        mainFrame.Visible = false
        minimizedBlock.Visible = true
        isMinimized = true
    end
end)

MakeDraggable(minimizedBlock)

-- Create Buttons
local function CreateToggleButton(name, feature)
    local button = Instance.new("TextButton", buttonContainer)
    button.Size = UDim2.new(1, -20, 0, 40)
    button.Position = UDim2.new(0.5, 0, 0, (#buttonContainer:GetChildren() - 1) * 50)
    button.AnchorPoint = Vector2.new(0.5, 0)
    button.Text = name .. ": OFF"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Arcade -- Minecraft-like font
    button.BackgroundColor3 = Color3.fromRGB(20, 20, 40) -- Button background
    button.BorderSizePixel = 0
    ApplyRoundedCorners(button)

    button.MouseButton1Click:Connect(function()
        toggles[feature] = not toggles[feature]
        button.Text = name .. ": " .. (toggles[feature] and "ON" or "OFF")
        if toggles[feature] then
            button.BackgroundColor3 = Color3.fromRGB(0, 200, 0) -- Green for ON
        else
            button.BackgroundColor3 = Color3.fromRGB(20, 20, 40) -- Blue-black for OFF
        end
    end)
end

-- Add Feature Buttons
CreateToggleButton("Auto Farm", "autoFarm")
CreateToggleButton("Auto Fruit Collect", "autoFruitCollect")
CreateToggleButton("ESP Fruits", "espFruits")
CreateToggleButton("Auto Teleport Fruits", "autoTeleportFruits")
CreateToggleButton("Auto Tap", "autoTap")

print("[BluesHub] UI Loaded Successfully!")
